name: DVC ML Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  pipeline:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for DVC
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('environment.yml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install dvc pandas>=2.2 scikit-learn>=1.4 lightgbm==4.4.* catboost==1.2.* xgboost==2.0.* optuna>=3.6 joblib numpy>=1.26 matplotlib>=3.9
        
    - name: Initialize DVC
      run: |
        dvc --version
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
    - name: Run DVC pipeline
      run: |
        dvc repro --verbose
        
    - name: Show pipeline status
      run: |
        dvc status
        dvc dag
        
    - name: Commit DVC updates
      run: |
        # Add DVC files and any generated .dvc files
        git add *.dvc dvc.lock .gitignore || echo "No DVC files to add"
        
        # Check if there are any staged changes
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Update DVC pipeline outputs [skip ci]"
          git push
        fi